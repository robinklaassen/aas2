name: CI

on: [push]

jobs:
  codestyle:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install composer dependencies
        run: composer install --prefer-dist --ignore-platform-reqs

      - name: Easy coding Standard
        run: vendor/bin/ecs check --config=ecs.php --no-progress-bar

  tests:
    name: Tests ${{ matrix.php }}
    runs-on: ubuntu-latest
    env:
      MYSQL_USER: ranonkeltje
      MYSQL_PASSWORD: ranonkeltje
      MYSQL_DATABASE: aas2
      MYSQL_ROOT_PASSWORD: ranonkeltje

    strategy:
      matrix:
        php: ["7.4"]
        experimental: [false]

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: ranonkeltje
          MYSQL_PASSWORD: ranonkeltje
          MYSQL_DATABASE: aas2
          MYSQL_ROOT_PASSWORD: ranonkeltje
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Install composer dependencies
        run: composer install --prefer-dist --ignore-platform-reqs

      - name: Setup project
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          envsubst < .env.github > .env
          php artisan key:generate
          php artisan env
          php artisan migrate --seed

      - name: Run unit tests
        run: vendor/bin/phpunit

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/feature/github-actions'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install yarn dependencies
        run: yarn install

      - name: Compile assets
#        Runs prod complication 2 times, because webpack paralises compilation and doesnt wait for all stylesheets
#        to be compiled before combining them
        run: |
          yarn prod
          yarn prod

      - name: Move assets for transport
        run: "mkdir deploy-unit && mv -t deploy-unit public/css public/js public/fonts"

      - name: Upload assets
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_HOSTNAME }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "./deploy-unit/"
          server-dir: ${{ secrets.FTP_REMOTE_DIR }}

      - name: Deploy application
        id: req
        uses: fjogeleit/http-request-action@master
        with:
          url: https://aas2.anderwijs.nl/updater/update?secret=${{ secrets.UPDATER_SECRET }}
          method: GET
          timeout: 30000
          preventFailureOnNoResponse: true

      - name: Show response
        run: echo ${{ steps.req.outputs.response }}
